/*
Aura Frame API - Unofficial

Reverse Engineered API for Aura Frames

API version: 0.0.1
Contact: dave@mudsite.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auraframes

import (
	"encoding/json"
)

// CurrentUser struct for CurrentUser
type CurrentUser struct {
	AdminAccount *string `json:"admin_account,omitempty"`
	AttributionId *string `json:"attribution_id,omitempty"`
	AttributionString *string `json:"attribution_string,omitempty"`
	AuthToken *string `json:"auth_token,omitempty"`
	AutoUploadOff *bool `json:"auto_upload_off,omitempty"`
	AvatarFileName *string `json:"avatar_file_name,omitempty"`
	BillingInfo *string `json:"billing_info,omitempty"`
	CharitySubscriptionsLaunched *bool `json:"charity_subscriptions_launched,omitempty"`
	ConfirmedEmail *string `json:"confirmed_email,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	CurrentSourceId *string `json:"current_source_id,omitempty"`
	EligibleForAppReviewPrompt *bool `json:"eligible_for_app_review_prompt,omitempty"`
	Email *string `json:"email,omitempty"`
	Features []Features `json:"features,omitempty"`
	GooglePhotosDisabled *string `json:"google_photos_disabled,omitempty"`
	HasAccessToNewGooglePhotos *bool `json:"has_access_to_new_google_photos,omitempty"`
	HasFrame *bool `json:"has_frame,omitempty"`
	Id *string `json:"id,omitempty"`
	LatestAppVersion *string `json:"latest_app_version,omitempty"`
	LivePhotosLaunched *bool `json:"live_photos_launched,omitempty"`
	Locale *string `json:"locale,omitempty"`
	Name *string `json:"name,omitempty"`
	PrintSubscriptionsLaunched *bool `json:"print_subscriptions_launched,omitempty"`
	RecurlyAccountCode *string `json:"recurly_account_code,omitempty"`
	ShortId *string `json:"short_id,omitempty"`
	ShowPushPrompt *bool `json:"show_push_prompt,omitempty"`
	SmartAlbumsOff *bool `json:"smart_albums_off,omitempty"`
	SmartSuggestionsOff *bool `json:"smart_suggestions_off,omitempty"`
	SubscriptionsLaunched *bool `json:"subscriptions_launched,omitempty"`
	TestAccount *string `json:"test_account,omitempty"`
	ThanksLaunched *bool `json:"thanks_launched,omitempty"`
	TooltipAddPhotosSeen *bool `json:"tooltip_add_photos_seen,omitempty"`
	TooltipAddedPhotosSeen *bool `json:"tooltip_added_photos_seen,omitempty"`
	TooltipGesturesSeen *bool `json:"tooltip_gestures_seen,omitempty"`
	TooltipInboxSeen *bool `json:"tooltip_inbox_seen,omitempty"`
	TooltipManageFramesSeen *bool `json:"tooltip_manage_frames_seen,omitempty"`
	TooltipSettingsSeen *bool `json:"tooltip_settings_seen,omitempty"`
	UnconfirmedEmail *string `json:"unconfirmed_email,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	VerboseLoggingEnabled *bool `json:"verbose_logging_enabled,omitempty"`
	WarnSmartAlbumsDeprecated *bool `json:"warn_smart_albums_deprecated,omitempty"`
}

// NewCurrentUser instantiates a new CurrentUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCurrentUser() *CurrentUser {
	this := CurrentUser{}
	return &this
}

// NewCurrentUserWithDefaults instantiates a new CurrentUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCurrentUserWithDefaults() *CurrentUser {
	this := CurrentUser{}
	return &this
}

// GetAdminAccount returns the AdminAccount field value if set, zero value otherwise.
func (o *CurrentUser) GetAdminAccount() string {
	if o == nil || o.AdminAccount == nil {
		var ret string
		return ret
	}
	return *o.AdminAccount
}

// GetAdminAccountOk returns a tuple with the AdminAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetAdminAccountOk() (*string, bool) {
	if o == nil || o.AdminAccount == nil {
		return nil, false
	}
	return o.AdminAccount, true
}

// HasAdminAccount returns a boolean if a field has been set.
func (o *CurrentUser) HasAdminAccount() bool {
	if o != nil && o.AdminAccount != nil {
		return true
	}

	return false
}

// SetAdminAccount gets a reference to the given string and assigns it to the AdminAccount field.
func (o *CurrentUser) SetAdminAccount(v string) {
	o.AdminAccount = &v
}

// GetAttributionId returns the AttributionId field value if set, zero value otherwise.
func (o *CurrentUser) GetAttributionId() string {
	if o == nil || o.AttributionId == nil {
		var ret string
		return ret
	}
	return *o.AttributionId
}

// GetAttributionIdOk returns a tuple with the AttributionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetAttributionIdOk() (*string, bool) {
	if o == nil || o.AttributionId == nil {
		return nil, false
	}
	return o.AttributionId, true
}

// HasAttributionId returns a boolean if a field has been set.
func (o *CurrentUser) HasAttributionId() bool {
	if o != nil && o.AttributionId != nil {
		return true
	}

	return false
}

// SetAttributionId gets a reference to the given string and assigns it to the AttributionId field.
func (o *CurrentUser) SetAttributionId(v string) {
	o.AttributionId = &v
}

// GetAttributionString returns the AttributionString field value if set, zero value otherwise.
func (o *CurrentUser) GetAttributionString() string {
	if o == nil || o.AttributionString == nil {
		var ret string
		return ret
	}
	return *o.AttributionString
}

// GetAttributionStringOk returns a tuple with the AttributionString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetAttributionStringOk() (*string, bool) {
	if o == nil || o.AttributionString == nil {
		return nil, false
	}
	return o.AttributionString, true
}

// HasAttributionString returns a boolean if a field has been set.
func (o *CurrentUser) HasAttributionString() bool {
	if o != nil && o.AttributionString != nil {
		return true
	}

	return false
}

// SetAttributionString gets a reference to the given string and assigns it to the AttributionString field.
func (o *CurrentUser) SetAttributionString(v string) {
	o.AttributionString = &v
}

// GetAuthToken returns the AuthToken field value if set, zero value otherwise.
func (o *CurrentUser) GetAuthToken() string {
	if o == nil || o.AuthToken == nil {
		var ret string
		return ret
	}
	return *o.AuthToken
}

// GetAuthTokenOk returns a tuple with the AuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetAuthTokenOk() (*string, bool) {
	if o == nil || o.AuthToken == nil {
		return nil, false
	}
	return o.AuthToken, true
}

// HasAuthToken returns a boolean if a field has been set.
func (o *CurrentUser) HasAuthToken() bool {
	if o != nil && o.AuthToken != nil {
		return true
	}

	return false
}

// SetAuthToken gets a reference to the given string and assigns it to the AuthToken field.
func (o *CurrentUser) SetAuthToken(v string) {
	o.AuthToken = &v
}

// GetAutoUploadOff returns the AutoUploadOff field value if set, zero value otherwise.
func (o *CurrentUser) GetAutoUploadOff() bool {
	if o == nil || o.AutoUploadOff == nil {
		var ret bool
		return ret
	}
	return *o.AutoUploadOff
}

// GetAutoUploadOffOk returns a tuple with the AutoUploadOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetAutoUploadOffOk() (*bool, bool) {
	if o == nil || o.AutoUploadOff == nil {
		return nil, false
	}
	return o.AutoUploadOff, true
}

// HasAutoUploadOff returns a boolean if a field has been set.
func (o *CurrentUser) HasAutoUploadOff() bool {
	if o != nil && o.AutoUploadOff != nil {
		return true
	}

	return false
}

// SetAutoUploadOff gets a reference to the given bool and assigns it to the AutoUploadOff field.
func (o *CurrentUser) SetAutoUploadOff(v bool) {
	o.AutoUploadOff = &v
}

// GetAvatarFileName returns the AvatarFileName field value if set, zero value otherwise.
func (o *CurrentUser) GetAvatarFileName() string {
	if o == nil || o.AvatarFileName == nil {
		var ret string
		return ret
	}
	return *o.AvatarFileName
}

// GetAvatarFileNameOk returns a tuple with the AvatarFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetAvatarFileNameOk() (*string, bool) {
	if o == nil || o.AvatarFileName == nil {
		return nil, false
	}
	return o.AvatarFileName, true
}

// HasAvatarFileName returns a boolean if a field has been set.
func (o *CurrentUser) HasAvatarFileName() bool {
	if o != nil && o.AvatarFileName != nil {
		return true
	}

	return false
}

// SetAvatarFileName gets a reference to the given string and assigns it to the AvatarFileName field.
func (o *CurrentUser) SetAvatarFileName(v string) {
	o.AvatarFileName = &v
}

// GetBillingInfo returns the BillingInfo field value if set, zero value otherwise.
func (o *CurrentUser) GetBillingInfo() string {
	if o == nil || o.BillingInfo == nil {
		var ret string
		return ret
	}
	return *o.BillingInfo
}

// GetBillingInfoOk returns a tuple with the BillingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetBillingInfoOk() (*string, bool) {
	if o == nil || o.BillingInfo == nil {
		return nil, false
	}
	return o.BillingInfo, true
}

// HasBillingInfo returns a boolean if a field has been set.
func (o *CurrentUser) HasBillingInfo() bool {
	if o != nil && o.BillingInfo != nil {
		return true
	}

	return false
}

// SetBillingInfo gets a reference to the given string and assigns it to the BillingInfo field.
func (o *CurrentUser) SetBillingInfo(v string) {
	o.BillingInfo = &v
}

// GetCharitySubscriptionsLaunched returns the CharitySubscriptionsLaunched field value if set, zero value otherwise.
func (o *CurrentUser) GetCharitySubscriptionsLaunched() bool {
	if o == nil || o.CharitySubscriptionsLaunched == nil {
		var ret bool
		return ret
	}
	return *o.CharitySubscriptionsLaunched
}

// GetCharitySubscriptionsLaunchedOk returns a tuple with the CharitySubscriptionsLaunched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetCharitySubscriptionsLaunchedOk() (*bool, bool) {
	if o == nil || o.CharitySubscriptionsLaunched == nil {
		return nil, false
	}
	return o.CharitySubscriptionsLaunched, true
}

// HasCharitySubscriptionsLaunched returns a boolean if a field has been set.
func (o *CurrentUser) HasCharitySubscriptionsLaunched() bool {
	if o != nil && o.CharitySubscriptionsLaunched != nil {
		return true
	}

	return false
}

// SetCharitySubscriptionsLaunched gets a reference to the given bool and assigns it to the CharitySubscriptionsLaunched field.
func (o *CurrentUser) SetCharitySubscriptionsLaunched(v bool) {
	o.CharitySubscriptionsLaunched = &v
}

// GetConfirmedEmail returns the ConfirmedEmail field value if set, zero value otherwise.
func (o *CurrentUser) GetConfirmedEmail() string {
	if o == nil || o.ConfirmedEmail == nil {
		var ret string
		return ret
	}
	return *o.ConfirmedEmail
}

// GetConfirmedEmailOk returns a tuple with the ConfirmedEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetConfirmedEmailOk() (*string, bool) {
	if o == nil || o.ConfirmedEmail == nil {
		return nil, false
	}
	return o.ConfirmedEmail, true
}

// HasConfirmedEmail returns a boolean if a field has been set.
func (o *CurrentUser) HasConfirmedEmail() bool {
	if o != nil && o.ConfirmedEmail != nil {
		return true
	}

	return false
}

// SetConfirmedEmail gets a reference to the given string and assigns it to the ConfirmedEmail field.
func (o *CurrentUser) SetConfirmedEmail(v string) {
	o.ConfirmedEmail = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CurrentUser) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CurrentUser) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CurrentUser) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCurrentSourceId returns the CurrentSourceId field value if set, zero value otherwise.
func (o *CurrentUser) GetCurrentSourceId() string {
	if o == nil || o.CurrentSourceId == nil {
		var ret string
		return ret
	}
	return *o.CurrentSourceId
}

// GetCurrentSourceIdOk returns a tuple with the CurrentSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetCurrentSourceIdOk() (*string, bool) {
	if o == nil || o.CurrentSourceId == nil {
		return nil, false
	}
	return o.CurrentSourceId, true
}

// HasCurrentSourceId returns a boolean if a field has been set.
func (o *CurrentUser) HasCurrentSourceId() bool {
	if o != nil && o.CurrentSourceId != nil {
		return true
	}

	return false
}

// SetCurrentSourceId gets a reference to the given string and assigns it to the CurrentSourceId field.
func (o *CurrentUser) SetCurrentSourceId(v string) {
	o.CurrentSourceId = &v
}

// GetEligibleForAppReviewPrompt returns the EligibleForAppReviewPrompt field value if set, zero value otherwise.
func (o *CurrentUser) GetEligibleForAppReviewPrompt() bool {
	if o == nil || o.EligibleForAppReviewPrompt == nil {
		var ret bool
		return ret
	}
	return *o.EligibleForAppReviewPrompt
}

// GetEligibleForAppReviewPromptOk returns a tuple with the EligibleForAppReviewPrompt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetEligibleForAppReviewPromptOk() (*bool, bool) {
	if o == nil || o.EligibleForAppReviewPrompt == nil {
		return nil, false
	}
	return o.EligibleForAppReviewPrompt, true
}

// HasEligibleForAppReviewPrompt returns a boolean if a field has been set.
func (o *CurrentUser) HasEligibleForAppReviewPrompt() bool {
	if o != nil && o.EligibleForAppReviewPrompt != nil {
		return true
	}

	return false
}

// SetEligibleForAppReviewPrompt gets a reference to the given bool and assigns it to the EligibleForAppReviewPrompt field.
func (o *CurrentUser) SetEligibleForAppReviewPrompt(v bool) {
	o.EligibleForAppReviewPrompt = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *CurrentUser) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *CurrentUser) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *CurrentUser) SetEmail(v string) {
	o.Email = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *CurrentUser) GetFeatures() []Features {
	if o == nil || o.Features == nil {
		var ret []Features
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetFeaturesOk() ([]Features, bool) {
	if o == nil || o.Features == nil {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *CurrentUser) HasFeatures() bool {
	if o != nil && o.Features != nil {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []Features and assigns it to the Features field.
func (o *CurrentUser) SetFeatures(v []Features) {
	o.Features = v
}

// GetGooglePhotosDisabled returns the GooglePhotosDisabled field value if set, zero value otherwise.
func (o *CurrentUser) GetGooglePhotosDisabled() string {
	if o == nil || o.GooglePhotosDisabled == nil {
		var ret string
		return ret
	}
	return *o.GooglePhotosDisabled
}

// GetGooglePhotosDisabledOk returns a tuple with the GooglePhotosDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetGooglePhotosDisabledOk() (*string, bool) {
	if o == nil || o.GooglePhotosDisabled == nil {
		return nil, false
	}
	return o.GooglePhotosDisabled, true
}

// HasGooglePhotosDisabled returns a boolean if a field has been set.
func (o *CurrentUser) HasGooglePhotosDisabled() bool {
	if o != nil && o.GooglePhotosDisabled != nil {
		return true
	}

	return false
}

// SetGooglePhotosDisabled gets a reference to the given string and assigns it to the GooglePhotosDisabled field.
func (o *CurrentUser) SetGooglePhotosDisabled(v string) {
	o.GooglePhotosDisabled = &v
}

// GetHasAccessToNewGooglePhotos returns the HasAccessToNewGooglePhotos field value if set, zero value otherwise.
func (o *CurrentUser) GetHasAccessToNewGooglePhotos() bool {
	if o == nil || o.HasAccessToNewGooglePhotos == nil {
		var ret bool
		return ret
	}
	return *o.HasAccessToNewGooglePhotos
}

// GetHasAccessToNewGooglePhotosOk returns a tuple with the HasAccessToNewGooglePhotos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetHasAccessToNewGooglePhotosOk() (*bool, bool) {
	if o == nil || o.HasAccessToNewGooglePhotos == nil {
		return nil, false
	}
	return o.HasAccessToNewGooglePhotos, true
}

// HasHasAccessToNewGooglePhotos returns a boolean if a field has been set.
func (o *CurrentUser) HasHasAccessToNewGooglePhotos() bool {
	if o != nil && o.HasAccessToNewGooglePhotos != nil {
		return true
	}

	return false
}

// SetHasAccessToNewGooglePhotos gets a reference to the given bool and assigns it to the HasAccessToNewGooglePhotos field.
func (o *CurrentUser) SetHasAccessToNewGooglePhotos(v bool) {
	o.HasAccessToNewGooglePhotos = &v
}

// GetHasFrame returns the HasFrame field value if set, zero value otherwise.
func (o *CurrentUser) GetHasFrame() bool {
	if o == nil || o.HasFrame == nil {
		var ret bool
		return ret
	}
	return *o.HasFrame
}

// GetHasFrameOk returns a tuple with the HasFrame field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetHasFrameOk() (*bool, bool) {
	if o == nil || o.HasFrame == nil {
		return nil, false
	}
	return o.HasFrame, true
}

// HasHasFrame returns a boolean if a field has been set.
func (o *CurrentUser) HasHasFrame() bool {
	if o != nil && o.HasFrame != nil {
		return true
	}

	return false
}

// SetHasFrame gets a reference to the given bool and assigns it to the HasFrame field.
func (o *CurrentUser) SetHasFrame(v bool) {
	o.HasFrame = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CurrentUser) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CurrentUser) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CurrentUser) SetId(v string) {
	o.Id = &v
}

// GetLatestAppVersion returns the LatestAppVersion field value if set, zero value otherwise.
func (o *CurrentUser) GetLatestAppVersion() string {
	if o == nil || o.LatestAppVersion == nil {
		var ret string
		return ret
	}
	return *o.LatestAppVersion
}

// GetLatestAppVersionOk returns a tuple with the LatestAppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetLatestAppVersionOk() (*string, bool) {
	if o == nil || o.LatestAppVersion == nil {
		return nil, false
	}
	return o.LatestAppVersion, true
}

// HasLatestAppVersion returns a boolean if a field has been set.
func (o *CurrentUser) HasLatestAppVersion() bool {
	if o != nil && o.LatestAppVersion != nil {
		return true
	}

	return false
}

// SetLatestAppVersion gets a reference to the given string and assigns it to the LatestAppVersion field.
func (o *CurrentUser) SetLatestAppVersion(v string) {
	o.LatestAppVersion = &v
}

// GetLivePhotosLaunched returns the LivePhotosLaunched field value if set, zero value otherwise.
func (o *CurrentUser) GetLivePhotosLaunched() bool {
	if o == nil || o.LivePhotosLaunched == nil {
		var ret bool
		return ret
	}
	return *o.LivePhotosLaunched
}

// GetLivePhotosLaunchedOk returns a tuple with the LivePhotosLaunched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetLivePhotosLaunchedOk() (*bool, bool) {
	if o == nil || o.LivePhotosLaunched == nil {
		return nil, false
	}
	return o.LivePhotosLaunched, true
}

// HasLivePhotosLaunched returns a boolean if a field has been set.
func (o *CurrentUser) HasLivePhotosLaunched() bool {
	if o != nil && o.LivePhotosLaunched != nil {
		return true
	}

	return false
}

// SetLivePhotosLaunched gets a reference to the given bool and assigns it to the LivePhotosLaunched field.
func (o *CurrentUser) SetLivePhotosLaunched(v bool) {
	o.LivePhotosLaunched = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *CurrentUser) GetLocale() string {
	if o == nil || o.Locale == nil {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetLocaleOk() (*string, bool) {
	if o == nil || o.Locale == nil {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *CurrentUser) HasLocale() bool {
	if o != nil && o.Locale != nil {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *CurrentUser) SetLocale(v string) {
	o.Locale = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CurrentUser) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CurrentUser) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CurrentUser) SetName(v string) {
	o.Name = &v
}

// GetPrintSubscriptionsLaunched returns the PrintSubscriptionsLaunched field value if set, zero value otherwise.
func (o *CurrentUser) GetPrintSubscriptionsLaunched() bool {
	if o == nil || o.PrintSubscriptionsLaunched == nil {
		var ret bool
		return ret
	}
	return *o.PrintSubscriptionsLaunched
}

// GetPrintSubscriptionsLaunchedOk returns a tuple with the PrintSubscriptionsLaunched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetPrintSubscriptionsLaunchedOk() (*bool, bool) {
	if o == nil || o.PrintSubscriptionsLaunched == nil {
		return nil, false
	}
	return o.PrintSubscriptionsLaunched, true
}

// HasPrintSubscriptionsLaunched returns a boolean if a field has been set.
func (o *CurrentUser) HasPrintSubscriptionsLaunched() bool {
	if o != nil && o.PrintSubscriptionsLaunched != nil {
		return true
	}

	return false
}

// SetPrintSubscriptionsLaunched gets a reference to the given bool and assigns it to the PrintSubscriptionsLaunched field.
func (o *CurrentUser) SetPrintSubscriptionsLaunched(v bool) {
	o.PrintSubscriptionsLaunched = &v
}

// GetRecurlyAccountCode returns the RecurlyAccountCode field value if set, zero value otherwise.
func (o *CurrentUser) GetRecurlyAccountCode() string {
	if o == nil || o.RecurlyAccountCode == nil {
		var ret string
		return ret
	}
	return *o.RecurlyAccountCode
}

// GetRecurlyAccountCodeOk returns a tuple with the RecurlyAccountCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetRecurlyAccountCodeOk() (*string, bool) {
	if o == nil || o.RecurlyAccountCode == nil {
		return nil, false
	}
	return o.RecurlyAccountCode, true
}

// HasRecurlyAccountCode returns a boolean if a field has been set.
func (o *CurrentUser) HasRecurlyAccountCode() bool {
	if o != nil && o.RecurlyAccountCode != nil {
		return true
	}

	return false
}

// SetRecurlyAccountCode gets a reference to the given string and assigns it to the RecurlyAccountCode field.
func (o *CurrentUser) SetRecurlyAccountCode(v string) {
	o.RecurlyAccountCode = &v
}

// GetShortId returns the ShortId field value if set, zero value otherwise.
func (o *CurrentUser) GetShortId() string {
	if o == nil || o.ShortId == nil {
		var ret string
		return ret
	}
	return *o.ShortId
}

// GetShortIdOk returns a tuple with the ShortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetShortIdOk() (*string, bool) {
	if o == nil || o.ShortId == nil {
		return nil, false
	}
	return o.ShortId, true
}

// HasShortId returns a boolean if a field has been set.
func (o *CurrentUser) HasShortId() bool {
	if o != nil && o.ShortId != nil {
		return true
	}

	return false
}

// SetShortId gets a reference to the given string and assigns it to the ShortId field.
func (o *CurrentUser) SetShortId(v string) {
	o.ShortId = &v
}

// GetShowPushPrompt returns the ShowPushPrompt field value if set, zero value otherwise.
func (o *CurrentUser) GetShowPushPrompt() bool {
	if o == nil || o.ShowPushPrompt == nil {
		var ret bool
		return ret
	}
	return *o.ShowPushPrompt
}

// GetShowPushPromptOk returns a tuple with the ShowPushPrompt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetShowPushPromptOk() (*bool, bool) {
	if o == nil || o.ShowPushPrompt == nil {
		return nil, false
	}
	return o.ShowPushPrompt, true
}

// HasShowPushPrompt returns a boolean if a field has been set.
func (o *CurrentUser) HasShowPushPrompt() bool {
	if o != nil && o.ShowPushPrompt != nil {
		return true
	}

	return false
}

// SetShowPushPrompt gets a reference to the given bool and assigns it to the ShowPushPrompt field.
func (o *CurrentUser) SetShowPushPrompt(v bool) {
	o.ShowPushPrompt = &v
}

// GetSmartAlbumsOff returns the SmartAlbumsOff field value if set, zero value otherwise.
func (o *CurrentUser) GetSmartAlbumsOff() bool {
	if o == nil || o.SmartAlbumsOff == nil {
		var ret bool
		return ret
	}
	return *o.SmartAlbumsOff
}

// GetSmartAlbumsOffOk returns a tuple with the SmartAlbumsOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetSmartAlbumsOffOk() (*bool, bool) {
	if o == nil || o.SmartAlbumsOff == nil {
		return nil, false
	}
	return o.SmartAlbumsOff, true
}

// HasSmartAlbumsOff returns a boolean if a field has been set.
func (o *CurrentUser) HasSmartAlbumsOff() bool {
	if o != nil && o.SmartAlbumsOff != nil {
		return true
	}

	return false
}

// SetSmartAlbumsOff gets a reference to the given bool and assigns it to the SmartAlbumsOff field.
func (o *CurrentUser) SetSmartAlbumsOff(v bool) {
	o.SmartAlbumsOff = &v
}

// GetSmartSuggestionsOff returns the SmartSuggestionsOff field value if set, zero value otherwise.
func (o *CurrentUser) GetSmartSuggestionsOff() bool {
	if o == nil || o.SmartSuggestionsOff == nil {
		var ret bool
		return ret
	}
	return *o.SmartSuggestionsOff
}

// GetSmartSuggestionsOffOk returns a tuple with the SmartSuggestionsOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetSmartSuggestionsOffOk() (*bool, bool) {
	if o == nil || o.SmartSuggestionsOff == nil {
		return nil, false
	}
	return o.SmartSuggestionsOff, true
}

// HasSmartSuggestionsOff returns a boolean if a field has been set.
func (o *CurrentUser) HasSmartSuggestionsOff() bool {
	if o != nil && o.SmartSuggestionsOff != nil {
		return true
	}

	return false
}

// SetSmartSuggestionsOff gets a reference to the given bool and assigns it to the SmartSuggestionsOff field.
func (o *CurrentUser) SetSmartSuggestionsOff(v bool) {
	o.SmartSuggestionsOff = &v
}

// GetSubscriptionsLaunched returns the SubscriptionsLaunched field value if set, zero value otherwise.
func (o *CurrentUser) GetSubscriptionsLaunched() bool {
	if o == nil || o.SubscriptionsLaunched == nil {
		var ret bool
		return ret
	}
	return *o.SubscriptionsLaunched
}

// GetSubscriptionsLaunchedOk returns a tuple with the SubscriptionsLaunched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetSubscriptionsLaunchedOk() (*bool, bool) {
	if o == nil || o.SubscriptionsLaunched == nil {
		return nil, false
	}
	return o.SubscriptionsLaunched, true
}

// HasSubscriptionsLaunched returns a boolean if a field has been set.
func (o *CurrentUser) HasSubscriptionsLaunched() bool {
	if o != nil && o.SubscriptionsLaunched != nil {
		return true
	}

	return false
}

// SetSubscriptionsLaunched gets a reference to the given bool and assigns it to the SubscriptionsLaunched field.
func (o *CurrentUser) SetSubscriptionsLaunched(v bool) {
	o.SubscriptionsLaunched = &v
}

// GetTestAccount returns the TestAccount field value if set, zero value otherwise.
func (o *CurrentUser) GetTestAccount() string {
	if o == nil || o.TestAccount == nil {
		var ret string
		return ret
	}
	return *o.TestAccount
}

// GetTestAccountOk returns a tuple with the TestAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetTestAccountOk() (*string, bool) {
	if o == nil || o.TestAccount == nil {
		return nil, false
	}
	return o.TestAccount, true
}

// HasTestAccount returns a boolean if a field has been set.
func (o *CurrentUser) HasTestAccount() bool {
	if o != nil && o.TestAccount != nil {
		return true
	}

	return false
}

// SetTestAccount gets a reference to the given string and assigns it to the TestAccount field.
func (o *CurrentUser) SetTestAccount(v string) {
	o.TestAccount = &v
}

// GetThanksLaunched returns the ThanksLaunched field value if set, zero value otherwise.
func (o *CurrentUser) GetThanksLaunched() bool {
	if o == nil || o.ThanksLaunched == nil {
		var ret bool
		return ret
	}
	return *o.ThanksLaunched
}

// GetThanksLaunchedOk returns a tuple with the ThanksLaunched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetThanksLaunchedOk() (*bool, bool) {
	if o == nil || o.ThanksLaunched == nil {
		return nil, false
	}
	return o.ThanksLaunched, true
}

// HasThanksLaunched returns a boolean if a field has been set.
func (o *CurrentUser) HasThanksLaunched() bool {
	if o != nil && o.ThanksLaunched != nil {
		return true
	}

	return false
}

// SetThanksLaunched gets a reference to the given bool and assigns it to the ThanksLaunched field.
func (o *CurrentUser) SetThanksLaunched(v bool) {
	o.ThanksLaunched = &v
}

// GetTooltipAddPhotosSeen returns the TooltipAddPhotosSeen field value if set, zero value otherwise.
func (o *CurrentUser) GetTooltipAddPhotosSeen() bool {
	if o == nil || o.TooltipAddPhotosSeen == nil {
		var ret bool
		return ret
	}
	return *o.TooltipAddPhotosSeen
}

// GetTooltipAddPhotosSeenOk returns a tuple with the TooltipAddPhotosSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetTooltipAddPhotosSeenOk() (*bool, bool) {
	if o == nil || o.TooltipAddPhotosSeen == nil {
		return nil, false
	}
	return o.TooltipAddPhotosSeen, true
}

// HasTooltipAddPhotosSeen returns a boolean if a field has been set.
func (o *CurrentUser) HasTooltipAddPhotosSeen() bool {
	if o != nil && o.TooltipAddPhotosSeen != nil {
		return true
	}

	return false
}

// SetTooltipAddPhotosSeen gets a reference to the given bool and assigns it to the TooltipAddPhotosSeen field.
func (o *CurrentUser) SetTooltipAddPhotosSeen(v bool) {
	o.TooltipAddPhotosSeen = &v
}

// GetTooltipAddedPhotosSeen returns the TooltipAddedPhotosSeen field value if set, zero value otherwise.
func (o *CurrentUser) GetTooltipAddedPhotosSeen() bool {
	if o == nil || o.TooltipAddedPhotosSeen == nil {
		var ret bool
		return ret
	}
	return *o.TooltipAddedPhotosSeen
}

// GetTooltipAddedPhotosSeenOk returns a tuple with the TooltipAddedPhotosSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetTooltipAddedPhotosSeenOk() (*bool, bool) {
	if o == nil || o.TooltipAddedPhotosSeen == nil {
		return nil, false
	}
	return o.TooltipAddedPhotosSeen, true
}

// HasTooltipAddedPhotosSeen returns a boolean if a field has been set.
func (o *CurrentUser) HasTooltipAddedPhotosSeen() bool {
	if o != nil && o.TooltipAddedPhotosSeen != nil {
		return true
	}

	return false
}

// SetTooltipAddedPhotosSeen gets a reference to the given bool and assigns it to the TooltipAddedPhotosSeen field.
func (o *CurrentUser) SetTooltipAddedPhotosSeen(v bool) {
	o.TooltipAddedPhotosSeen = &v
}

// GetTooltipGesturesSeen returns the TooltipGesturesSeen field value if set, zero value otherwise.
func (o *CurrentUser) GetTooltipGesturesSeen() bool {
	if o == nil || o.TooltipGesturesSeen == nil {
		var ret bool
		return ret
	}
	return *o.TooltipGesturesSeen
}

// GetTooltipGesturesSeenOk returns a tuple with the TooltipGesturesSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetTooltipGesturesSeenOk() (*bool, bool) {
	if o == nil || o.TooltipGesturesSeen == nil {
		return nil, false
	}
	return o.TooltipGesturesSeen, true
}

// HasTooltipGesturesSeen returns a boolean if a field has been set.
func (o *CurrentUser) HasTooltipGesturesSeen() bool {
	if o != nil && o.TooltipGesturesSeen != nil {
		return true
	}

	return false
}

// SetTooltipGesturesSeen gets a reference to the given bool and assigns it to the TooltipGesturesSeen field.
func (o *CurrentUser) SetTooltipGesturesSeen(v bool) {
	o.TooltipGesturesSeen = &v
}

// GetTooltipInboxSeen returns the TooltipInboxSeen field value if set, zero value otherwise.
func (o *CurrentUser) GetTooltipInboxSeen() bool {
	if o == nil || o.TooltipInboxSeen == nil {
		var ret bool
		return ret
	}
	return *o.TooltipInboxSeen
}

// GetTooltipInboxSeenOk returns a tuple with the TooltipInboxSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetTooltipInboxSeenOk() (*bool, bool) {
	if o == nil || o.TooltipInboxSeen == nil {
		return nil, false
	}
	return o.TooltipInboxSeen, true
}

// HasTooltipInboxSeen returns a boolean if a field has been set.
func (o *CurrentUser) HasTooltipInboxSeen() bool {
	if o != nil && o.TooltipInboxSeen != nil {
		return true
	}

	return false
}

// SetTooltipInboxSeen gets a reference to the given bool and assigns it to the TooltipInboxSeen field.
func (o *CurrentUser) SetTooltipInboxSeen(v bool) {
	o.TooltipInboxSeen = &v
}

// GetTooltipManageFramesSeen returns the TooltipManageFramesSeen field value if set, zero value otherwise.
func (o *CurrentUser) GetTooltipManageFramesSeen() bool {
	if o == nil || o.TooltipManageFramesSeen == nil {
		var ret bool
		return ret
	}
	return *o.TooltipManageFramesSeen
}

// GetTooltipManageFramesSeenOk returns a tuple with the TooltipManageFramesSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetTooltipManageFramesSeenOk() (*bool, bool) {
	if o == nil || o.TooltipManageFramesSeen == nil {
		return nil, false
	}
	return o.TooltipManageFramesSeen, true
}

// HasTooltipManageFramesSeen returns a boolean if a field has been set.
func (o *CurrentUser) HasTooltipManageFramesSeen() bool {
	if o != nil && o.TooltipManageFramesSeen != nil {
		return true
	}

	return false
}

// SetTooltipManageFramesSeen gets a reference to the given bool and assigns it to the TooltipManageFramesSeen field.
func (o *CurrentUser) SetTooltipManageFramesSeen(v bool) {
	o.TooltipManageFramesSeen = &v
}

// GetTooltipSettingsSeen returns the TooltipSettingsSeen field value if set, zero value otherwise.
func (o *CurrentUser) GetTooltipSettingsSeen() bool {
	if o == nil || o.TooltipSettingsSeen == nil {
		var ret bool
		return ret
	}
	return *o.TooltipSettingsSeen
}

// GetTooltipSettingsSeenOk returns a tuple with the TooltipSettingsSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetTooltipSettingsSeenOk() (*bool, bool) {
	if o == nil || o.TooltipSettingsSeen == nil {
		return nil, false
	}
	return o.TooltipSettingsSeen, true
}

// HasTooltipSettingsSeen returns a boolean if a field has been set.
func (o *CurrentUser) HasTooltipSettingsSeen() bool {
	if o != nil && o.TooltipSettingsSeen != nil {
		return true
	}

	return false
}

// SetTooltipSettingsSeen gets a reference to the given bool and assigns it to the TooltipSettingsSeen field.
func (o *CurrentUser) SetTooltipSettingsSeen(v bool) {
	o.TooltipSettingsSeen = &v
}

// GetUnconfirmedEmail returns the UnconfirmedEmail field value if set, zero value otherwise.
func (o *CurrentUser) GetUnconfirmedEmail() string {
	if o == nil || o.UnconfirmedEmail == nil {
		var ret string
		return ret
	}
	return *o.UnconfirmedEmail
}

// GetUnconfirmedEmailOk returns a tuple with the UnconfirmedEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetUnconfirmedEmailOk() (*string, bool) {
	if o == nil || o.UnconfirmedEmail == nil {
		return nil, false
	}
	return o.UnconfirmedEmail, true
}

// HasUnconfirmedEmail returns a boolean if a field has been set.
func (o *CurrentUser) HasUnconfirmedEmail() bool {
	if o != nil && o.UnconfirmedEmail != nil {
		return true
	}

	return false
}

// SetUnconfirmedEmail gets a reference to the given string and assigns it to the UnconfirmedEmail field.
func (o *CurrentUser) SetUnconfirmedEmail(v string) {
	o.UnconfirmedEmail = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CurrentUser) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CurrentUser) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *CurrentUser) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetVerboseLoggingEnabled returns the VerboseLoggingEnabled field value if set, zero value otherwise.
func (o *CurrentUser) GetVerboseLoggingEnabled() bool {
	if o == nil || o.VerboseLoggingEnabled == nil {
		var ret bool
		return ret
	}
	return *o.VerboseLoggingEnabled
}

// GetVerboseLoggingEnabledOk returns a tuple with the VerboseLoggingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetVerboseLoggingEnabledOk() (*bool, bool) {
	if o == nil || o.VerboseLoggingEnabled == nil {
		return nil, false
	}
	return o.VerboseLoggingEnabled, true
}

// HasVerboseLoggingEnabled returns a boolean if a field has been set.
func (o *CurrentUser) HasVerboseLoggingEnabled() bool {
	if o != nil && o.VerboseLoggingEnabled != nil {
		return true
	}

	return false
}

// SetVerboseLoggingEnabled gets a reference to the given bool and assigns it to the VerboseLoggingEnabled field.
func (o *CurrentUser) SetVerboseLoggingEnabled(v bool) {
	o.VerboseLoggingEnabled = &v
}

// GetWarnSmartAlbumsDeprecated returns the WarnSmartAlbumsDeprecated field value if set, zero value otherwise.
func (o *CurrentUser) GetWarnSmartAlbumsDeprecated() bool {
	if o == nil || o.WarnSmartAlbumsDeprecated == nil {
		var ret bool
		return ret
	}
	return *o.WarnSmartAlbumsDeprecated
}

// GetWarnSmartAlbumsDeprecatedOk returns a tuple with the WarnSmartAlbumsDeprecated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentUser) GetWarnSmartAlbumsDeprecatedOk() (*bool, bool) {
	if o == nil || o.WarnSmartAlbumsDeprecated == nil {
		return nil, false
	}
	return o.WarnSmartAlbumsDeprecated, true
}

// HasWarnSmartAlbumsDeprecated returns a boolean if a field has been set.
func (o *CurrentUser) HasWarnSmartAlbumsDeprecated() bool {
	if o != nil && o.WarnSmartAlbumsDeprecated != nil {
		return true
	}

	return false
}

// SetWarnSmartAlbumsDeprecated gets a reference to the given bool and assigns it to the WarnSmartAlbumsDeprecated field.
func (o *CurrentUser) SetWarnSmartAlbumsDeprecated(v bool) {
	o.WarnSmartAlbumsDeprecated = &v
}

func (o CurrentUser) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminAccount != nil {
		toSerialize["admin_account"] = o.AdminAccount
	}
	if o.AttributionId != nil {
		toSerialize["attribution_id"] = o.AttributionId
	}
	if o.AttributionString != nil {
		toSerialize["attribution_string"] = o.AttributionString
	}
	if o.AuthToken != nil {
		toSerialize["auth_token"] = o.AuthToken
	}
	if o.AutoUploadOff != nil {
		toSerialize["auto_upload_off"] = o.AutoUploadOff
	}
	if o.AvatarFileName != nil {
		toSerialize["avatar_file_name"] = o.AvatarFileName
	}
	if o.BillingInfo != nil {
		toSerialize["billing_info"] = o.BillingInfo
	}
	if o.CharitySubscriptionsLaunched != nil {
		toSerialize["charity_subscriptions_launched"] = o.CharitySubscriptionsLaunched
	}
	if o.ConfirmedEmail != nil {
		toSerialize["confirmed_email"] = o.ConfirmedEmail
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.CurrentSourceId != nil {
		toSerialize["current_source_id"] = o.CurrentSourceId
	}
	if o.EligibleForAppReviewPrompt != nil {
		toSerialize["eligible_for_app_review_prompt"] = o.EligibleForAppReviewPrompt
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	if o.GooglePhotosDisabled != nil {
		toSerialize["google_photos_disabled"] = o.GooglePhotosDisabled
	}
	if o.HasAccessToNewGooglePhotos != nil {
		toSerialize["has_access_to_new_google_photos"] = o.HasAccessToNewGooglePhotos
	}
	if o.HasFrame != nil {
		toSerialize["has_frame"] = o.HasFrame
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LatestAppVersion != nil {
		toSerialize["latest_app_version"] = o.LatestAppVersion
	}
	if o.LivePhotosLaunched != nil {
		toSerialize["live_photos_launched"] = o.LivePhotosLaunched
	}
	if o.Locale != nil {
		toSerialize["locale"] = o.Locale
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PrintSubscriptionsLaunched != nil {
		toSerialize["print_subscriptions_launched"] = o.PrintSubscriptionsLaunched
	}
	if o.RecurlyAccountCode != nil {
		toSerialize["recurly_account_code"] = o.RecurlyAccountCode
	}
	if o.ShortId != nil {
		toSerialize["short_id"] = o.ShortId
	}
	if o.ShowPushPrompt != nil {
		toSerialize["show_push_prompt"] = o.ShowPushPrompt
	}
	if o.SmartAlbumsOff != nil {
		toSerialize["smart_albums_off"] = o.SmartAlbumsOff
	}
	if o.SmartSuggestionsOff != nil {
		toSerialize["smart_suggestions_off"] = o.SmartSuggestionsOff
	}
	if o.SubscriptionsLaunched != nil {
		toSerialize["subscriptions_launched"] = o.SubscriptionsLaunched
	}
	if o.TestAccount != nil {
		toSerialize["test_account"] = o.TestAccount
	}
	if o.ThanksLaunched != nil {
		toSerialize["thanks_launched"] = o.ThanksLaunched
	}
	if o.TooltipAddPhotosSeen != nil {
		toSerialize["tooltip_add_photos_seen"] = o.TooltipAddPhotosSeen
	}
	if o.TooltipAddedPhotosSeen != nil {
		toSerialize["tooltip_added_photos_seen"] = o.TooltipAddedPhotosSeen
	}
	if o.TooltipGesturesSeen != nil {
		toSerialize["tooltip_gestures_seen"] = o.TooltipGesturesSeen
	}
	if o.TooltipInboxSeen != nil {
		toSerialize["tooltip_inbox_seen"] = o.TooltipInboxSeen
	}
	if o.TooltipManageFramesSeen != nil {
		toSerialize["tooltip_manage_frames_seen"] = o.TooltipManageFramesSeen
	}
	if o.TooltipSettingsSeen != nil {
		toSerialize["tooltip_settings_seen"] = o.TooltipSettingsSeen
	}
	if o.UnconfirmedEmail != nil {
		toSerialize["unconfirmed_email"] = o.UnconfirmedEmail
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.VerboseLoggingEnabled != nil {
		toSerialize["verbose_logging_enabled"] = o.VerboseLoggingEnabled
	}
	if o.WarnSmartAlbumsDeprecated != nil {
		toSerialize["warn_smart_albums_deprecated"] = o.WarnSmartAlbumsDeprecated
	}
	return json.Marshal(toSerialize)
}

type NullableCurrentUser struct {
	value *CurrentUser
	isSet bool
}

func (v NullableCurrentUser) Get() *CurrentUser {
	return v.value
}

func (v *NullableCurrentUser) Set(val *CurrentUser) {
	v.value = val
	v.isSet = true
}

func (v NullableCurrentUser) IsSet() bool {
	return v.isSet
}

func (v *NullableCurrentUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCurrentUser(val *CurrentUser) *NullableCurrentUser {
	return &NullableCurrentUser{value: val, isSet: true}
}

func (v NullableCurrentUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCurrentUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


